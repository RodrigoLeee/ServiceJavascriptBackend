<div>
  <h1>Criação de um Service em Javascript para o Backend</h1>

  <p>Esta página é utilizada para testar arquivos helpers criados no Sails.js que fazem o tratamento de dados, utilizando JavaScript, para um banco de dados.</p>

  <h2>Sobre</h2>

  <p>A documentação referente a este projeto está disponível em: <a href="https://github.com/RodrigoLeee/ServiceJavascriptBackend">https://github.com/RodrigoLeee/ServiceJavascriptBackend</a></p>

</div>
<div>
  <h2>Interface para helpers</h2>

  <!-- Formulário para criar um novo user -->
  <form id="createUserForm">
  <!-- Nome -->
    <div>
      <label for="nome">Nome:</label>
      <input type="text" id="nome" name="nome" required>
    </div>
  <!-- Senha -->
    <div>
      <label for="senha">Senha:</label>
      <input type="text" id="senha" name="senha" required>
    </div>
  <!-- Email -->
    <div>
      <label for="email">Email:</label>
      <input type="text" id="email" name="email" required>
    </div>
  <!-- Estado -->
    <div>
      <label for="estado">Estado(Sigla):</label>
      <input type="text" id="estado" name="estado" required>
    </div>
  <!-- Botão para criar -->
    <button type="submit">Cadastrar</button>
  </form>

  <!-- Lista de users -->
  <div id="usersList">
    <h2>Lista de Users</h2>
  </div>

<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script>
  // Função para carregar a lista de users
  function carregarListaUsers() {
    axios.get('/user')
      .then(function (response) {
        const users = response.data;
        const listaHtml = users.map(function (user) {
          return `
              <div>
                <strong>ID:</strong> ${user.id} - <strong>Nome:</strong> ${user.nome} - <strong>Senha:</strong> ${user.senha} - <strong>Email:</strong> ${user.email} - <strong>Estado:</strong> ${user.estado}
                <button type="button" onclick="excluirUser('${user.id}')">Excluir</button>
              </div>
            `;
        }).join('');
        document.getElementById('usersList').innerHTML = listaHtml;
      })
      .catch(function (error) {
        console.error('Erro ao carregar lista de users:', error);
      });
  }

  // Carregar lista de users ao carregar a página
  document.addEventListener('DOMContentLoaded', function () {
    carregarListaUsers();
  });

  // Enviar dados para criar um novo user
  document.getElementById('createUserForm').addEventListener('submit', function (event) {
    event.preventDefault();
    const nome = document.getElementById('nome').value;
    const senha = document.getElementById('senha').value;
    const email = document.getElementById('email').value;
    const estado = document.getElementById('estado').value;

    axios.post('/user', { nome, senha, email, estado })
      .then(function () {
        // Atualizar a lista de users após a criação
        carregarListaUsers();
        // Limpar os campos do formulário
        document.getElementById('nome').value = '';
        document.getElementById('senha').value = '';
        document.getElementById('email').value = '';
        document.getElementById('estado').value = '';
      })
      .catch(function (error) {
        console.error('Erro ao criar user:', error);
      });
  });

  // Função para excluir um user
  function excluirUser(idUser) {
    if (confirm('Tem certeza que deseja excluir este user?')) {
      axios.delete(`/user/${idUser}`)
        .then(function () {
          // Atualizar a lista de users após a exclusão
          carregarListaUsers();
        })
        .catch(function (error) {
          console.error('Erro ao excluir user:', error);
        });
    }
  }
</script>


